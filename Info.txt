
Xijk : variable de la case (i,j) pour la valeur particulière k
/Xijk : négation de la variable Xijk

Transposition des règles du jeu en logique :
- Une seule valeur par case :                   Vij = Xij1./Xij2.../Xijn + /Xij1.Xij2./Xij3.../Xijn + ... + /Xij1./Xij2...Xijn        [n²]
- Une seule même valeur k par ligne i :          Li = Xi1k./Xi2k.../Xink + ... + /Xi1k./Xi2k...Xink                                   [n]
                            colonne j :          Cj = X1jk./X2jk.../Xnjk + ... + /X1jk./X2jk...Xnjk                                   [n]
- Case (a,b) supérieure à la case (c,d) :        S? = Xab2.Xcd1 + Xab3.Xcd2 + Xab3.Xcd1 + ... + Xabn.Xcd(n-1) + ... + Xabn.Xcd1       [p]
- Valeur k de la case (i,j) donnée de base :     B? = Xijk                                                                            [q]

=> Faire la conjonction de toutes les règles : F = V11.V12...V1n.V21...Vnn.L1...Ln.C1...Cn.S1...Sp.B1...Bq


Etapes:
1) Lecture de la grille dans un fichier d'entrée
   Création d'un objet Grille ?
2) Création de l'arbre contenant la conjonction de toutes le règles (noté F ci-dessus)
3) Transformation de la formule (arbre) en forme normale conjonctive FNC (produit de clauses)
4) Ecriture du fichier de sortie explicitant chaque clause de la FNC


Format de la grille en entrée:
----------------------------------
4           // taille de la grille
0 0<0 0     // <,>,V,^ : caractères d'inégalité
  ^         // Cases sans valeur par défaut = 0
1 0 0 0
    V  
0 0>0>0
^      
0 0 3 0
----------------------------------


Exemple de création de l'arbre correspondant à la règle Vij :

Règle Vij:
    Arbre V
    Pour x de 1 à n
        Arbre C
        Pour y de 1 à n
            Si x = y
                Variable var(i,j,y,0)   // Variable normale
            Sinon
                Variable var(i,j,y,1)   // Négation de la variable
            conjonction(C,var)
        disjonction(V,C)
    retourner V
                
